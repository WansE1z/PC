#SERVERUL

Serverul va deschide 2 socketi(TCP + UDP)
Cand se conecteaza un client pe server : New client (CLIENT_ID) connected from IP:PORT.
					Client (CLIENT_ID) disconnected.\
Daca primeste exit, se inchide tot (echivalent CTRL+C)
Mesaje :
- Topic (char[50])
- Tip_date (unsigned int)
- Continut (char[1500]+\0)

#CLIENTII TCP

./subscriber ID_CLIENT IP_SERVER PORT_SERVER
ID_CLIENT - char[]
IP_SERVER - inet_addr(char[])
PORT_SERVER - char[]

clientul -> server
* subscribe topic SF
- topic = topicul la care vrea sa dea subscribe
- SF = 0/1

* unsubscribe topic
- topic ^^

* exit
- va inchide clientul

Dupa ce clientul a trimis una dintre comenzi, o sa apara (un)subscribed topic.

De exemplu, daca un client UDP ce are adresa IP 1.2.3.4 publica la topicul UPB/precis/1/temperature
valoarea 23.5, ca numar real cu 2 zecimale, folosind port-ul sursa 4573, atunci Ä±n client se va afisa:

1.2.3.4:4573 - UPB/precis/1/temperature - SHORT_REAL - 23.5

Nr intreg fara semn 	     -> int        -> 0
Nr real pozitiv cu 2 zecimal -> short_real -> 1
Nr real 		     -> float      -> 2
Sir de caractere             -> string     -> 3

ID_CLIENT maxim 10 caractere -> char[10]

struct MesajeClient {
	int client_id;
	char[] mesaje;
}
SF = 1 -> el trebuie sa primeasca de la server toate mesajele care nu i-au fost trimise
SF = 0 -> nu se mai trimit mesajele





